version: "3.9"

services:
  prometheus:
    image: prom/prometheus:v2.40.2
    restart: always
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - /opt/container/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml #Prometheus config file mount
      - /opt/container/prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml #Alert rules
      - /opt/container/prometheus/data:/prometheus #Data store
    command:
      - "--config.file=/etc/prometheus/prometheus.yml" #Prometheus config file mount
      - "--storage.tsdb.path=/prometheus" #Data store
      - "--storage.tsdb.retention.time=90d" #Log Retention
      - "--web.enable-lifecycle" #Auto Config Reload (curl --request POST http://localhost:9090/-/reload)
    networks:
      - monitor

  alert:
    image: prom/alertmanager:v0.24.0
    restart: always
    container_name: alertmanager
    ports:
      - 9093:9093
    volumes:
      - /opt/container/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml #Config file
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml" #Config file
    networks:
      - monitor

  grafana:
    image: grafana/grafana:9.2.5
    restart: always
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - /opt/container/grafana/data:/var/lib/grafana #Storage path
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`monitor.ascension-holding.com`)
      - traefik.http.routers.grafana.entrypoints=web
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.routers.grafana.tls=true
      - traefik.http.routers.grafana.tls.certresolver=myresolver
    networks:
      - monitor

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.46.0
    restart: always
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitor

  blackbox-exporter:
    image: prom/blackbox-exporter:v0.22.0
    restart: always
    container_name: blackbox_exporter
    ports:
      - 9115:9115
    volumes:
      - /opt/container/blackbox/config.yml:/etc/blackbox_exporter/config.yml #Config file
    command:
      - "--config.file=/etc/blackbox_exporter/config.yml" #Config file
    networks:
      - monitor

  traefik:
    image: traefik:v2.9
    container_name: traefik
    restart: always
    ports:
      - 80:80
      - 443:443
      - 8050:8080
    command:
      - "--log.level=ERROR"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--api.debug=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=monitor"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.email=devops@ascension-holding.com"
      - "--certificatesresolvers.myresolver.acme.storage=acme.json"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - monitor

  loki:
    image: grafana/loki:3.2.1
    restart: always
    container_name: loki
    ports:
      - "3100:3100" # Loki API port
    command:
      - "--config.file=/etc/loki/loki-config.yaml" # Loki config file
    volumes:
      - /opt/container/loki/loki-config.yaml:/etc/loki/loki-config.yaml # Loki config file
      - /opt/prometheus/loki-data:/data/loki # Loki data storage
    networks:
      - monitor

networks:
  monitor:
    external: true
